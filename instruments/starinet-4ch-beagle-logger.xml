<?xml version="1.0" standalone="yes"?>

<Instrument>
    <Identifier>Starinet4ChannelBeagleLogger</Identifier>
    <Description>A Starinet 4 Channel Beagle Data Logger</Description>
    <StaribusAddress>000</StaribusAddress>
    <StarinetAddress>192.168.1.24</StarinetAddress>
    <StarinetPort>1205</StarinetPort>
    <NumberOfChannels>5</NumberOfChannels>
    <DataTranslator>StaribusBlock</DataTranslator>

    <!-- Plugins are loaded in order or appearance.  Core normally resides after all other plugins, well it does -->
    <!-- in Starbase -->

        <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>DataCapture</Identifier>
        <Description>The Data Capture Plugin Module</Description>
        <CommandCodeBase>03</CommandCodeBase>

        <Command>
            <Identifier>getSpace</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the percentage of available storage remaining.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>DecimalInteger</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>%</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^([0-9][0-9][0-9])$</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>

        <Command>
            <Identifier>getData</Identifier>
            <CommandCode>01</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the data produced by the Instrument.</Description>
            <SendToPort>False</SendToPort>
            <BlockedDataCommand>02,03</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>None</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>

        <Command>
            <Identifier>getDataBlockCount</Identifier>
            <CommandCode>02</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the number of blocks in the Instrument data.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>HexInteger</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^([0-9A-F][0-9A-F][0-9A-F][0-9A-F])$</Regex>
            </Response>
        </Command>

        <Command>
            <Identifier>getDataBlock</Identifier>
            <CommandCode>03</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the specified block of Instrument data.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>[0-9A-F][0-9A-F][0-9A-F][0-9A-F]</Regex>
                <Tooltip>Allowed Values: BlockID 0000 to FFFF</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>HexInteger</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^(((19|20)\d\d([-])(0[1-9]|1[012])([-])(0[1-9]|[12][0-9]|3[01]))\s((([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9]))(\s[+\-](\d{3})\s\d{4}\s{3})\d*)$</Regex>
            </Response>
        </Command>

        <Command>
            <Identifier>getRate</Identifier>
            <CommandCode>04</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Get the data capture sampling rate.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>DecimalInteger</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>Seconds</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^([0-9][0-9][0-9][0-9])$</Regex>
            </Response>
        </Command>

        <Command>
            <Identifier>setRate</Identifier>
            <CommandCode>05</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Set the data capture sampling rate.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>^([1-9][0-9]?|1[0-9]{2}|2[0-4][0-9]|25[0-5])$</Regex>
                <Tooltip>Allowed Values: 1 to 255 seconds</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>Seconds</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>ACK</Regex>
            </Response>
        </Command>

        <Command>
            <Identifier>capture</Identifier>
            <CommandCode>06</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Set the data capture sampling rate.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>False,True</Choices>
                <Regex>None</Regex>
                <Tooltip>Starts or stops data capture</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>ACK</Regex>
            </Response>
        </Command>

    </Plugin>

        <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>DataProcessor</Identifier>
        <Description>The Data Processor Plugin Module</Description>
        <CommandCodeBase>50</CommandCodeBase>

        <Command>
            <Identifier>segmentTimeSeries</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0001</CommandVariant>
            <Description>Segment current data set into days or weeks and save CSV file in data store.</Description>
            <SendToPort>False</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>Day,Week</Choices>
                <Regex>None</Regex>
                <Tooltip>Segment into days, segment into weeks</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>None</Regex>
            </Response>
        </Command>
    </Plugin>

    <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>LoggerPlugin</Identifier>
        <Description>The Logger Plugin Module</Description>
        <CommandCodeBase>04</CommandCodeBase>

        <Command>
            <Identifier>getRealtimeData</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the realtime output of the 4 channel logger.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>DecimalInteger</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^((-|\+)?\d*(\.\d+)?\x1E0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500)\x1E0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500)\x1E0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500)\x1E0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500))$</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>
    </Plugin>

    <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>Importer</Identifier>
        <Description>The Data Importer Plugin Module</Description>
        <CommandCodeBase>80</CommandCodeBase>

        <Command>
            <Identifier>importLocal</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Get a single data file from the local file system.</Description>
            <SendToPort>False</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>
                <Regex>ACK</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>
    </Plugin>

    <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>Exporter</Identifier>
        <Description>The Data Exporter Plugin Module</Description>
        <CommandCodeBase>81</CommandCodeBase>

        <Command>
            <Identifier>exportRawData</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Saves the current raw data in CSV format.</Description>
            <SendToPort>False</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>
                <Units>None</Units>
                <Regex>ACK</Regex>
            </Response>
        </Command>
    </Plugin>

        <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>Analogue</Identifier>
        <Description>The Analogue Plugin Module</Description>
        <CommandCodeBase>02</CommandCodeBase>

        <Command>
            <Identifier>getA2D</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the voltage read by the selected A2D channel.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>^[0-7]$</Regex>
                <Tooltip>Allowed Values: Channels 0 to 7</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>DecimalInteger</DataTypeName>
                <Units>mV</Units>
                <Regex>^0*([0-9]{1,3}|1[0-9]{3}|2[0-4][0-9]{2}|2500)$</Regex>
            </Response>
        </Command>
    </Plugin>

    <Plugin>
        <!-- A virtual Plugin -->
        <Identifier>Utilities</Identifier>
        <Description>The Utilities Plugin Module</Description>
        <CommandCodeBase>01</CommandCodeBase>

        <Command>
            <Identifier>getTemperature</Identifier>
            <CommandCode>01</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the Temperature of the Controller (Celsius).</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>Dimensionless</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>Celsius</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^((-|\+)?\d*(\.\d+)?)$</Regex>
            </Response>
        </Command>

        <Command>
            <Identifier>getClockDate</Identifier>
            <CommandCode>0D</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Get the current clock time from the controller.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>Dimensionless</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^((19|20)\d\d([-])(0[1-9]|1[012])([-])(0[1-9]|[12][0-9]|3[01]))$</Regex>
            </Response>
        </Command>
        <Command>
            <Identifier>getClockTime</Identifier>
            <CommandCode>0E</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the Time from the Controller clock.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>Dimensionless</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>^((([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9]))$</Regex>
            </Response>
        </Command>
        <Command>
            <Identifier>getHostname</Identifier>
            <CommandCode>07</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the hostname of the Controller.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>Dimensionless</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>None</Regex>
            </Response>
        </Command>
    </Plugin>

    <Plugin>
        <Identifier>Core</Identifier>
        <Description>The Core Module</Description>
        <CommandCodeBase>00</CommandCodeBase>

        <Command>
            <Identifier>reset</Identifier>
            <CommandCode>00</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Allowed values: Soft, Defaults, Staribus.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>1234</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>Soft,Defaults</Choices>
                <Regex>None</Regex>
                <Tooltip>Soft,Defaults</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>ACK</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>

        <Command>
            <Identifier>ping</Identifier>
            <CommandCode>01</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Pings the Controller.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>None</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>ACK</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>
        <Command>
            <Identifier>getVersion</Identifier>
            <CommandCode>0A</CommandCode>
            <CommandVariant>0000</CommandVariant>
            <Description>Gets the Version of the Controller OS.</Description>
            <SendToPort>True</SendToPort>
            <BlockedDataCommand>None</BlockedDataCommand>
            <SteppedDataCommand>None</SteppedDataCommand>
            <Parameter>
                <Choices>None</Choices>
                <Regex>None</Regex>
                <Tooltip>None</Tooltip>
            </Parameter>
            <Response>
                <DataTypeName>String</DataTypeName>  # DecimalInteger, DecimalFloat, HexInteger, String
                <Units>None</Units>  # Any string you like this is displayed in the statusMessage after the response.
                <Regex>None</Regex> # Regex of response can be ACK if response is ACK
            </Response>
        </Command>
    </Plugin>

    <ChartMetadata>
        <YaxisLabel>Multichannel Outputs</YaxisLabel>
        <YaxisRange>0,1800</YaxisRange>
        <YaxisScale>Lin</YaxisScale>
        <XaxisLabel>Time (UT)</XaxisLabel>
    </ChartMetadata>

    <!-- Colours are from http://www.mulinblog.com/a-color-palette-optimized-for-data-visualization/ -->

    <ChannelMetadata>
        <ChannelLabel>Temperature</ChannelLabel>
        <ChannelColour>#F15854</ChannelColour>
        <ChannelDataTypeName>DecimalInteger</ChannelDataTypeName>
        <ChannelUnit>Celsius</ChannelUnit>
    </ChannelMetadata>

    <ChannelMetadata>
        <ChannelLabel>Channel 1</ChannelLabel>
        <ChannelColour>#5DA5DA</ChannelColour>
        <ChannelDataTypeName>DecimalInteger</ChannelDataTypeName>
        <ChannelUnit>mV</ChannelUnit>
    </ChannelMetadata>

    <ChannelMetadata>
        <ChannelLabel>Channel 2</ChannelLabel>
        <ChannelColour>#DECF3F</ChannelColour>
        <ChannelDataTypeName>DecimalInteger</ChannelDataTypeName>
        <ChannelUnit>mV</ChannelUnit>
    </ChannelMetadata>

    <ChannelMetadata>
        <ChannelLabel>Channel 3</ChannelLabel>
        <ChannelColour>#60BD68</ChannelColour>
        <ChannelDataTypeName>DecimalInteger</ChannelDataTypeName>
        <ChannelUnit>mV</ChannelUnit>
    </ChannelMetadata>

    <ChannelMetadata>
        <ChannelLabel>Channel 4</ChannelLabel>
        <ChannelColour>#B2912F</ChannelColour>
        <ChannelDataTypeName>DecimalInteger</ChannelDataTypeName>
        <ChannelUnit>mV</ChannelUnit>
    </ChannelMetadata>

</Instrument>